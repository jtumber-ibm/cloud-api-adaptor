---
- hosts: 127.0.0.1
  connection: local
  tasks:
  - name: Install packer
    shell: |
      curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
      arch="{{ ansible_architecture }}"
      apt-add-repository "deb [arch=${arch/x86_64/amd64}] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
      apt-get update && sudo apt-get install packer
    args:
      executable: /bin/bash
      creates: /usr/bin/packer
  - name: Install Go
    shell: |
      set -o errexit -o pipefail
      arch="{{ ansible_architecture }}"
      gover=go1.18.5
      curl -sL "https://go.dev/dl/$gover.linux-${arch/x86_64/amd64}.tar.gz" | tar -xzf - -C /usr/local
      if ! grep -q '^PATH=/usr/local/go/bin:\$PATH$' /root/.bashrc; then
        echo 'PATH=/usr/local/go/bin:$PATH' >> /root/.bashrc
      fi
    args:
      executable: /bin/bash
      creates: /usr/local/go/bin/go
  - name: Create GOPATH
    ansible.builtin.lineinfile:
      path: /root/.bashrc
      regexp: '^export GOPATH='
      line: export GOPATH=/root/go
  - name: Install Rust
    shell: |
      set -o errexit -o pipefail
      arch="{{ ansible_architecture }}"

      curl --proto '=https' --tlsv1.2 -sSf -o /tmp/rustup-init https://sh.rustup.rs
      sh /tmp/rustup-init -y
      rm /tmp/rustup-init
      source /root/.cargo/env

      case "$arch" in
        x86_64) rustup target add "$arch-unknown-linux-musl" ;;
      esac

      if ! grep -q '^source "\$HOME/.cargo/env"$' /root/.bashrc; then
        echo 'source "$HOME/.cargo/env"' >> /root/.bashrc
      fi
    args:
      executable: /bin/bash
      creates: /root/.cargo/bin/cargo
  - name: Checkout the Kata containers repository
    shell: |
      set -o errexit -o pipefail
      cd /root
      git clone -b "{{ kata_containers_branch }}" "{{ kata_containers_repo }}"
    args:
      executable: /bin/bash
      creates: /root/kata-containers
  - name: Build Image
    shell: |
      PATH=/usr/local/go/bin:$PATH
      make build
    args:
      executable: /bin/bash
      chdir: "/root/cloud-api-adaptor/ibmcloud"
    environment:
      CLOUD_PROVIDER: ibmcloud
      IBM_API_KEY: "{{ ibmcloud_api_key }}"
      REGION: "{{ region }}"
      SUBNET_ID: "{{ subnet_id }}"
      RESOURCE_GROUP_ID: "{{ resource_group_id }}"
